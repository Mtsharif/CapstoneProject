@using WorkflowManagementSystem.ViewModels

@if (Request.IsAuthenticated)
{
    @*@model WorkflowManagementSystem.ViewModels.EventProjectViewModel*@
{
    ViewBag.Title = "Project Management";
}
    <style>
        .nav-stacked > li > a {
            min-height: 50px;
            height: 50px;
            color: black;
        }

        .nav-pills > li > a:hover {
            background-color: #e9e9e9 !important;
            color:black;
        }

        /*.nav-pills > li > a:active {
            background-color: #be4545 !important;
            background-color: #e9e9e9 !important;
        }*/

        /*.nav-pills > li > a:focus {
            background-color: #be4545 !important;
        }*/

        
        
    </style>

    <h2 class="text-left">Project Management</h2>

    <div>
        @*@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm btn-round glyphicon glyphicon-chevron-left"})*@
        
        <a href="@Url.Action("Index", "EventProject")" class="btn btn-default btn-sm btn-round">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            Back to Project List
        </a>
    </div>
    <hr />

    <div class="container col-md-12">

        <div class="tabtable">

            <ul class="nav nav-pills nav-stacked col-md-3">
                <li class="active"><a href="#DetailsTab" data-toggle="tab">Project Details</a></li>
                <li><a href="#SchedulesTab" data-toggle="tab">Schedules</a></li>
                <li><a href="#ClientTab" data-toggle="tab">Client Details</a></li>
                <li><a href="#PresentationTab" data-toggle="tab">Presentation</a></li>
                <li><a href="#CostSheetTab" data-toggle="tab">Cost Sheet</a></li>
                <li><a href="#ThreeDimensionModelTab" data-toggle="tab">Three Dimension Model</a></li>
                <li><a href="#QuotationAndInvoiceTab" data-toggle="tab">Quotation and Invoice</a></li>
                <li><a href="#EventReportTemplateTab" data-toggle="tab">Event Report Template</a></li>
                <li><a href="#EventReportTab" data-toggle="tab">Event Report</a></li>
                <li><a href="#UshersTab" data-toggle="tab">Ushers</a></li>
            </ul>

            <div class="tab-content col-md-9">
                <div class="tab-pane active  " id="DetailsTab">
                    <h3>Project Details</h3>
                    @Html.Action("ProjectDetailsPartial", "EventProject", new { id = (int)ViewBag.ProjectId })
                </div>

                <div class="tab-pane" id="PresentationTab">
                    <h3>Presentation</h3>
                    @*@Html.Partial("ProjectPresentationPartial",
                                    new ViewDataDictionary { { "id", (int)ViewBag.ProjectId } })
                        <div id="PresentationStatusMessage"></div>*@

                    @Html.Partial("ProjectPresentationPartial",
           new ProjectPresentationViewModel { EventProjectId = (int)ViewBag.ProjectId })
                    <div id="PresentationDetails"></div>
                     @Html.Action("ProjectGetPresentationPartial")
                </div>

                <div class="tab-pane" id="ThreeDimensionModelTab">
                    <h3>Three Dimension Model</h3>
                    @Html.Partial("Project3DModelPartial",
    new Project3DModelViewModel { EventProjectId = (int)ViewBag.ProjectId })
                    <div id="3DModelDetails"></div>
                    @Html.Action("ProjectGet3DModelPartial")            
                </div>

                <div class="tab-pane" id="QuotationAndInvoiceTab">
                    <h3>Quotation and Invoice</h3>
                    @Html.Partial("DocumentPartial",
           new DocumentViewModel { EventProjectId = (int)ViewBag.ProjectId })
                    <div id="DocumentStatusMessage"></div>
                    <div id="DocumentList"></div>
                     @Html.Action("GetDocumentPartial")

                </div>

                <div class="tab-pane" id="EventReportTemplateTab">
                    <h3>Event Report Template</h3>
                    @Html.Partial("ProjectEventReportTemplatePartial",
    new ProjectEventReportTemplateViewModel { EventProjectId = (int)ViewBag.ProjectId })
                    <div id="EventReportTemplateDetails"></div>
                    <div id="EventReportTemplateStatusMessage"></div>
                    @Html.Action("ProjectGetEventReportTemplatePartial")
                </div>

                <div class="tab-pane" id="EventReportTab">
                    <h3>Event Report</h3>
                    @Html.Partial("ProjectEventReportPartial",
new ProjectEventReportViewModel { EventProjectId = (int)ViewBag.ProjectId })
                    <div id="EventReportDetails"></div>
                    <div id="EventReportStatusMessage"></div>
                    @Html.Action("ProjectGetEventReportPartial")
                </div>

                <div class="tab-pane" id="SchedulesTab">
                    <h3>Schedules</h3>
                    @Html.Partial("ProjectSchedulesPartial",
           new ProjectScheduleViewModel { EventProjectId = (int)ViewBag.ProjectId, ScheduleDate = DateTime.Today })
                    <div id="ScheduleStatusMessage"></div>
                    <div id="ProjectScheduleList"></div>
                </div>

                <div class="tab-pane" id="ClientTab">
                    <h3>Client Details</h3>
                    @Html.Action("ClientDetailsPartial", "EventProject", new { id = (int)ViewBag.ProjectId })
                </div>

                <div class="tab-pane" id="UshersTab">
                    <h3>Ushers Assigned</h3>
                    @Html.Action("UshersPartial", "EventProject", new { id = (int)ViewBag.ProjectId })
                </div>

                @*<div class="tab-pane" id="TasksTab">
                            <h3>Tasks</h3>
                            @Html.Partial("TaskAssignmentPartial",
                    new TaskAssignmentViewModel { EventProjectId = (int)ViewBag.ProjectId})
                            <div id="TaskStatusMessage"></div>
                            <div id="TaskList"></div>
                        </div>*@

                @*<div class="tab-pane" id="UshersTab">
                        <h3>Ushers</h3>
                    </div>*@

                <div class="tab-pane" id="CostSheetTab">
                        <h3>Cost Sheet</h3>
                        @Html.Partial("CostSheetPartial",
                    new CostSheetViewModel { EventProjectId = (int)ViewBag.ProjectId })
                        <div id="CostSheetStatusMessage"></div>
                        <div id="CostSheetList"></div>

                    </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">

        // Definition of Get project schedules function
        function getProjectSchedules(projectId) {
            $.get("/EventProject/ProjectGetSchedulesPartial", { id: projectId })
                .done(function (result) {
                    $("#ProjectScheduleList").html(result);
                });
        }

        // Definition of Get cost sheet function
        function getCostSheets(projectId) {
            $.get("/EventProject/GetCostSheetsPartial", { id: projectId })
                .done(function (result) {
                    $("#CostSheetList").html(result);
                });
        }

        //// Definition of Get usher appointed function
        //function getUsherAppointed(projectId) {
        //    $.get("/EventProject/GetUsherAppointedPartial", { id: projectId })
        //        .done(function (result) {
        //            $("#UsherAppointedList").html(result);
        //        });
        //}

        // Definition to Get presentation function
        function getProjectPresentation(projectId) {
            $.get("/EventProject/ProjectGetPresentationPartial", { id: projectId })
                .done(function (result) {
                    $("#PresentationDetails").html(result);
                });
        }

        // Definition to Get 3D model function
        function getProject3DModel(projectId) {
            $.get("/EventProject/ProjectGet3DModelPartial", { id: projectId })
                .done(function (result) {
                    $("#3DModelDetails").html(result);
                });
        }

        // Definition to Get event report template function
        function getProjectEventReportTemplate(projectId) {
            $.get("/EventProject/ProjectGetEventReportTemplatePartial", { id: projectId })
                .done(function (result) {
                    $("#EventReportTemplateDetails").html(result);
                });
        }

        // Definition to Get event report function
        function getProjectEventReport(projectId) {
            $.get("/EventProject/ProjectGetEventReportPartial", { id: projectId })
                .done(function (result) {
                    $("#EventReportDetails").html(result);
                });
        }

        // Definition of Get document function
        function getDocuments(projectId) {
            $.get("/EventProject/GetDocumentPartial", { id: projectId })
                .done(function (result) {
                    $("#DocumentList").html(result);
                });
        }

        // Clear Schedule form
        function clearScheduleForm() {
            $('#ScheduleDate').val(""),
            $('#StartTime').val(""),
            $('#EndTime').val("")
        }

        $(document).ready(function () {

            // Get Project ID from ViewBag
            var projectId = parseInt(@ViewBag.ProjectId);

            // Clear schedule form
            clearScheduleForm();

            // Create a presentation
            //$("#CreatePresentationButton").click(function (event) {

            //    //Disable the click event on the create button
            //    event.preventDefault();

            //     $.ajax({
            //        url: "/EventProject/ProjectPresentationPartial",
            //        type: "post",
            //        data: {
            //            EventProjectId: projectId,
            //            //PresentationFile: $('#Presentation').val(),
            //            Presentation: $('#Presentation').val()
            //        },

            //        success: function (result) {

            //            // Clear the text inputs
            //            $('#Presentation').val("");

            //            getProjectPresentation(projectId);

            //            //$("#PresentationStatusMessage").html("<p>Presentation added successfully</p>");
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#PresentationStatusMessage").html("<p>Presentation was not added!</p>");
            //        }
            //    });
            //});
          
            //// Create a 3D model
            //$("#Create3DModelButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/Project3DModelPartial",
            //        type: "post",
            //        data: {
            //            EventProjectId: projectId,
            //            ThreeDModel: $('#ThreeDModel').val()
            //        },
            //        success: function (result) {

            //            // Clear the text inputs
            //            $('#ThreeDModel').val("");

            //            getProject3DModel(projectId);
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#3DModelStatusMessage").html("<p>3D Model was not added!</p>");
            //        }
            //    });
            //});

            // Create an event report template
            //$("#CreateEventReportTemplateButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/ProjectEventReportTemplatePartial",
            //        type: "post",
            //        data: {
            //            EventProjectId: projectId,
            //            EventReportTemplate: $('#EventReportTemplate').val()
            //        },
            //        success: function (result) {

            //            // Clear the text inputs
            //            $('#EventReportTemplate').val("");

            //            getProjectEventReportTemplate(projectId);

            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#EventReportTemplateStatusMessage").html("<p>Event Report Template was not added!</p>");
            //        }
            //    });
            //});

            // Create an event report
            //$("#CreateEventReportButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/ProjectEventReportPartial",
            //        type: "post",
            //        data: {
            //            EventProjectId: projectId,
            //            EventReport: $('#EventReport').val()
            //        },
            //        success: function (result) {

            //            // Clear the text inputs
            //            $('#EventReport').val("");

            //            getProjectEventReport(projectId);

            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#EventReportStatusMessage").html("<p>Event Report was not added!</p>");
            //        }
            //    });
            //});

            // Display Schedules
            getProjectSchedules(projectId);

            // Create a schedule
            $("#CreateScheduleButton").click(function (event) {

                // Disable the click event on the create button
                event.preventDefault();

                $.ajax({
                    url: "/EventProject/ProjectSchedulesPartial",
                    type: "post",
                    data: {
                        ScheduleDate: $('#ScheduleDate').val(),
                        StartTime: $('#StartTime').val(),
                        EndTime: $('#EndTime').val(),
                        EventProjectId: projectId
                    },
                    success: function (result) {

                        // Clear fields
                        clearScheduleForm()

                        // Display the project schedule after the add
                        getProjectSchedules(projectId);
                    },
                    error: function (jqxhr, status, exception) {
                        console.log(status);
                        $("#ScheduleStatusMessage").html("<p>Schedule was not added!</p>");
                    }
                });
            });

            // Display documents
            //getDocuments(projectId);

            //// Create a document
            //$("#CreateDocumentButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/DocumentPartial",
            //        type: "post",
            //        data: {
            //            Name: $('#Name').val(),
            //            FilePath: $('#FilePath').val(),
            //            //DocumentFile: $('#DocumentFile').val(),
            //            //Status: $('#Status').val(),
            //            EventProjectId: projectId
            //        },
            //        success: function (result) {

            //            // Clear the text inputs
            //            $('#Name').val("");
            //            $('#FilePath').val("");

            //            getDocuments(projectId);
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#DocumentStatusMessage").html("<p>Quotation and Invoice were not added!</p>");
            //        }
            //    });
            //});

            // Display Schedules
            //getTaskAssignments(projectId);

            //// Create a task
            //$("#AssignTasksButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/TaskAssignmentPartial",
            //        type: "post",
            //        data: {
            //            TaskName: $('#TaskName').val(),
            //            Description: $('#Description').val(),
            //            Deadline: $('#Deadline').val(),
            //            Status: $('#Status').val(),
            //            Priority: $('#Priority').val(),
            //            IsCompleted: $('#IsCompleted').val(),
            //            AnyEmployee: $('#AnyEmployee').val(),
            //            EventProjectId: projectId
            //        },
            //        success: function (result) {

            //            // Clear fields
            //            clearScheduleForm()

            //            // Display the project schedule after the add
            //            getTaskAssignments(projectId);

            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#TaskStatusMessage").html("<p>Task was not added!</p>");
            //        }
            //    });
            //});

            // // Display Tasks
            //getTasks(projectId);

            //// Create a schedule
            //$("#CreateTaskButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/EmployeeTaskPartial",
            //        type: "post",
            //        data: {
            //            TaskName: $('#TaskName').val(),
            //            Description: $('#Description').val(),
            //            Deadline: $('#Deadline').val(),
            //            Status: $('#Status').val(),
            //            Priority: $('#Priority').val(),
            //            IsCompleted: $('#IsCompleted').val(),
            //            //AnyEmployee: $('#AnyEmployee').val(),
            //            EventProjectId: projectId
            //        },
            //        success: function (result) {

            //            // Clear fields
            //            clearScheduleForm()

            //            // Display the project schedule after the add
            //            getTasks(projectId);
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#TaskStatusMessage").html("<p>Task was not added!</p>");
            //        }
            //    });
            //});

            //// Display usher appointed
            //getUsherAppointed(projectId);

            //// Create a schedule
            //$("#CreateUsherAppointedButton").click(function (event) {

            //    // Disable the click event on the create button
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/UsherAppointedPartial",
            //        type: "post",
            //        data: {
            //            DateAppointed: $('#DateAppointed').val(),
            //            Usher: $('#Usher').val(),
            //            Employee: $('#Employee').val(),
            //            EventProjectId: projectId
            //        },
            //        success: function (result) {

            //            //// Clear fields
            //            //clearScheduleForm()

            //            // Display the project schedule after the add
            //            getUsherAppointed(projectId);
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#UsherAppointedStatusMessage").html("<p>Usher was not assigned!</p>");
            //        }
            //    });
            //});

            //getTaskAssignments(projectId);

            //$("#AssignTasksButton").click(function (event) {
            //    event.preventDefault();

            //    $.ajax({
            //        url: "/EventProject/TaskAssignmentPartial",
            //        type: "post",
            //        data: {
            //            TaskName: $('#TaskName').val(),
            //            Description: $('#Description').val(),
            //            Deadline: $('#Deadline').val(),
            //            Priority: $('#Priority').val(),
            //            IsCompleted: $('#IsCompleted').val(),
            //            AnyEmployee: $('#AnyEmployee').val(),
            //            //EmployeeId: EmployeeId,
            //            //EmployeeId: employeeId,
            //            EventProjectId: projectId
            //        },
            //        success: function (result) {

            //            // Clear fields
            //            //clearScheduleForm()

            //            // Display the project schedule after the add
            //            getTaskAssignments(projectId);
            //        },
            //        error: function (jqxhr, status, exception) {
            //            console.log(status);
            //            $("#TaskStatusMessage").html("<p>Task was not assigned!</p>");
            //        }
            //    });
            //});

                        //// Display cost sheets
            getCostSheets(projectId);

            // Create a cost sheet
            $("#CreateCostSheetButton").click(function (event) {

                // Disable the click event on the create button
                event.preventDefault();

                $.ajax({
                    url: "/EventProject/CostSheetPartial",
                    type: "post",
                    data: {

                        CostSheetName: $('#CostSheetName').val(),
                        Status: $('#Status').val(),
                        ProductionEmployee: $('#ProductionEmployeeId').val(),
                        EventProjectId: projectId
                    },
                    success: function (result) {

                        //// Clear fields
                        //clearScheduleForm()

                        // Display the project schedule after the add
                        getCostSheets(projectId);
                    },
                    error: function (jqxhr, status, exception) {
                        console.log(status);
                        $("#CostSheetStatusMessage").html("<p>Cost Sheet was not added! Please Try Again.</p>");
                    }
                });
            });

        });

        </script>
    }
}