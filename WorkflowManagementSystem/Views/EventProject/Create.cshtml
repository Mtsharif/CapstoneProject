@model WorkflowManagementSystem.ViewModels.EventProjectViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create New Project</h2>


@using (Html.BeginForm("Create", "EventProject", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Event Project</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.EventType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brief, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Brief, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Presentation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Presentation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Presentation, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.PresentationFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("PresentationFile", "", new { type = "file" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.EventReportTemplate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventReportTemplate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventReportTemplate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.EventReport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventReport, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventReport, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.ThreeDModel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThreeDModel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThreeDModel, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Employee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClientServiceEmployeeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Employee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClientId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Client, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-offset-2">
        @Html.ActionLink("Add Schedule", "ProjectSchedules")
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
