@model WorkflowManagementSystem.ViewModels.EventProjectViewModel

@if (Request.IsAuthenticated && User.IsInRole("Client Service Employee"))
{
    {
        ViewBag.Title = "Details";

        <style>
            * {
                box-sizing: border-box
            }

            body {
                font-family: "Lato", sans-serif;
            }

            /* Style the tab */
            .tab {
                float: left;
                border: 1px solid #ccc;
                background-color: #f1f1f1;
                width: 15%;
                height: 500px;
            }

                /* Style the buttons inside the tab */
                .tab button {
                    display: block;
                    background-color: inherit;
                    color: black;
                    padding: 22px 16px;
                    width: 100%;
                    border: none;
                    outline: none;
                    text-align: left;
                    cursor: pointer;
                    transition: 0.3s;
                    font-size: 17px;
                }

                    /* Change background color of buttons on hover */
                    .tab button:hover {
                        background-color: #ddd;
                    }

                    /* Create an active/current "tab button" class */
                    .tab button.active {
                        background-color: #ccc;
                    }

            /* Style the tab content */
            .tabcontent {
                float: left;
                padding: 0px 12px;
                border: 1px solid #ccc;
                width: 70%;
                border-left: none;
                height: 500px;
            }
        </style>
    }

    <h2>Project Details</h2>

    <div class="tab">
        <button class="tablinks" onclick="openProject(event, 'Details')" id="defaultOpen">Details</button>
        <button class="tablinks" onclick="openProject(event, 'Presentation')">Presentation</button>
        <button class="tablinks" onclick="openProject(event, '3Dmodel')">3D Model</button>
    </div>

    <div id="Details" class="tabcontent">
        <h3>Project Details</h3>
        <div>
            @*<h4>EventProjectViewModel</h4>*@
            <hr />

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventType)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventType)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Brief)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Brief)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Street)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Street)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.District)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.District)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.City)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.City)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Client)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Client)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Employee)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Employee)
                </dd>
            </dl>

        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.EventProjectId }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>

    <div id="Presentation" class="tabcontent">
        <h3>Upload Presentation</h3>
        <br />
        <br />
        @*@using (Html.BeginForm("Create", "EventProject", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.PresentationFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("PresentationFile", "", new { type = "file" })
                    </div>
                </div>
            }*@

        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>*@
    </div>

    <div id="3Dmodel" class="tabcontent">
        <h3>Upload 3D Model</h3>
        @*<div class="form-group" >
                @Html.LabelFor(model => model.ThreeDModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ThreeDModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ThreeDModel, "", new { @class = "text-danger" })
                </div>
            </div>*@
    </div>

    <script>
        function openProject(evt, project) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(project).style.display = "block";
            evt.currentTarget.className += " active";
        }

        // Get the element with id="defaultOpen" and click on it
        document.getElementById("defaultOpen").click();
    </script>

}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}