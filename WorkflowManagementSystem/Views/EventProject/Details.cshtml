@model WorkflowManagementSystem.ViewModels.EventProjectViewModel

@if (Request.IsAuthenticated && User.IsInRole("Client Service Employee"))
{
    {
        ViewBag.Title = "Details";

        <style>
            * {
                box-sizing: border-box
            }

            body {
                font-family: "Lato", sans-serif;
            }

            /* Style the tab */
            .tab {
                float: left;
                border: 1px solid #ccc;
                background-color: #f1f1f1;
                width: 15%;
                height: 700px;
            }

                /* Style the buttons inside the tab */
                .tab button {
                    display: block;
                    background-color: inherit;
                    color: black;
                    padding: 22px 16px;
                    width: 100%;
                    border: none;
                    outline: none;
                    text-align: left;
                    cursor: pointer;
                    transition: 0.3s;
                    font-size: 17px;
                }

                    /* Change background color of buttons on hover */
                    .tab button:hover {
                        background-color: #ddd;
                    }

                    /* Create an active/current "tab button" class */
                    .tab button.active {
                        background-color: #ccc;
                    }

            /* Style the tab content */
            .tabcontent {
                float: left;
                padding: 0px 12px;
                border: 1px solid #ccc;
                width: 70%;
                border-left: none;
                height: 700px;
            }
        </style>
    }

    <h2>Project Details</h2>

    <div class="tab">
        <button class="tablinks" onclick="openProject(event, 'Details')" id="defaultOpen">Details</button>
        <button class="tablinks" onclick="openProject(event, 'Presentation')">Presentation</button>
        <button class="tablinks" onclick="openProject(event, '3Dmodel')">3D Model</button>
        <button class="tablinks" onclick="openProject(event, 'Documents')">Quotation and Invoice</button>
        <button class="tablinks" onclick="openProject(event, 'UsherAppointed')">Ushers Assigned</button>
    </div>

    <div id="Details" class="tabcontent">
        <h3>Project Details</h3>
        <div>
            @*<h4>EventProjectViewModel</h4>*@
            <hr />

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventType)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventType)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Brief)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Brief)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Street)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Street)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.District)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.District)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.City)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.City)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.DateCreated)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Client)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Client)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Employee)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Employee)
                </dd>
            </dl>
            <div class="col-lg-offset-10">
                @Html.ActionLink("Edit Project", "Edit", new { id = Model.EventProjectId })
            </div>
        </div>

         <h4>Schedule</h4>
        @if (Model.ProjectSchedules.Count() == 0)
        {
        <p class="text-danger">This project does not have any schedule.</p>
        }
        else
        {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ProjectSchedules)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date.DayOfWeek)
                        @Html.DisplayFor(modelItem => item.Date.Day)
                        @Html.Label(",")
                        @Html.DisplayFor(modelItem => item.Date.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime.Hour)
                        @Html.Label(":")
                        @Html.DisplayFor(modelItem => item.StartTime.Minute)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime.Hour)
                        @Html.Label(":")
                        @Html.DisplayFor(modelItem => item.EndTime.Minute)
                    </td>
                </tr>
        }
            </tbody>
        </table>
        }
        <p>
            @Html.ActionLink("Add Schedule", "ProjectSchedules", new { id = Model.EventProjectId }) |
            @Ajax.ActionLink("Client Details", "ClientDetailsPartial", new { id = Model.EventProjectId }, new AjaxOptions { UpdateTargetId = "ClientDetails", HttpMethod = "GET", InsertionMode = InsertionMode.Replace })
            <br />
            @Html.ActionLink("Back to List", "Index")
        </p>
    </div>
    <div id="ClientDetails"></div>

    <div id="Presentation" class="tabcontent">
        <h3>Upload Presentation</h3>

        @*@Html.Action("UploadPresentationPartial")
            @Html.Action("PresentationDetailsPartial")*@
        @*@Html.Action("UploadPresentationPartial")*@

    </div>

    <div id="3Dmodel" class="tabcontent">
        <h3>Upload 3D Model</h3>

    </div>

    <div id="Documents" class="tabcontent">
        <h3>Upload Quotation and Invoice</h3>

        @Html.Action("AddDocument", "Document")
        @*@Html.Partial("AddDocumentPartial", "Document")*@
    </div>

    <div id="UsherAppointed" class="tabcontent">
        <h3>Ushers Assigned</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Usher Name</th>
                    <th>Mobile Number</th>
                    <th>Gender</th>
                    <th>City</th>
                    <th>Car Availability</th>
                    <th>Language</th>
                    <th>Assigned By </th>
                    <th>Date Assigned</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.UsherAppointeds)
        {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.MobileNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.CarAvailability)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usher.Language.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Employee.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateAppointed.DayOfWeek)
                        @Html.DisplayFor(modelItem => item.DateAppointed.Day)
                        @Html.Label(",")
                        @Html.DisplayFor(modelItem => item.DateAppointed.Year)
                    </td>
                </tr>
}
            </tbody>
        </table>
    </div>

    <script>
        function openProject(evt, project) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(project).style.display = "block";
            evt.currentTarget.className += " active";
        }

        // Get the element with id="defaultOpen" and click on it
        document.getElementById("defaultOpen").click();
    </script>

}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}